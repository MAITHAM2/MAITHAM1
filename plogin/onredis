onredis then        if tonumber(gbanspamonredis) ==  4 and not is_owner(msg) then          --Global ban that user          banall_user(msg.from.id)          local gbanspam =  gban:spam ..msg.from.id          --reset the counter          redis:set(gbanspam, 0)          if msg.from.username ~= nil then            username = msg.from.username		  else 			username = "---"          end          local print_name = user_print_name(msg.from):gsub("â€®", "")		  local name = print_name:gsub("_", "")          --Send this to that chat          send_large_msg("chat#id"..msg.to.id, "User [ "..name.." ]"..msg.from.id.." globally banned (spamming)")		  send_large_msg("channel#id"..msg.to.id, "User [ "..name.." ]"..msg.from.id.." globally banned (spamming)")          local GBan_log =  GBan_log 		  local GBan_log =  data[tostring(GBan_log)]		  for k,v in pairs(GBan_log) do			log_SuperGroup = v			gban_text = "User [ "..name.." ] ( @"..username.." )"..msg.from.id.." Globally banned from ( "..msg.to.print_name.." ) [ "..msg.to.id.." ] (spamming)"			--send it to log group/channel			send_large_msg(log_SuperGroup, gban_text)		  end        end      end      kicktable[user] = true      msg = nil    end    redis:setex(hash, TIME_CHECK, msgs+1)  end  return msgendlocal function cron()  --clear that table on the top of the plugins	kicktable = {}endreturn {  patterns = {},  cron = cron,  pre_process = pre_process
